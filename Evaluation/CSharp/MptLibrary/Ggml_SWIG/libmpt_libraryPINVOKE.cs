//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.1.1
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace MptLibrary {

class libmpt_libraryPINVOKE {

  protected class SWIGExceptionHelper {

    public delegate void ExceptionDelegate(string message);
    public delegate void ExceptionArgumentDelegate(string message, string paramName);

    static ExceptionDelegate applicationDelegate = new ExceptionDelegate(SetPendingApplicationException);
    static ExceptionDelegate arithmeticDelegate = new ExceptionDelegate(SetPendingArithmeticException);
    static ExceptionDelegate divideByZeroDelegate = new ExceptionDelegate(SetPendingDivideByZeroException);
    static ExceptionDelegate indexOutOfRangeDelegate = new ExceptionDelegate(SetPendingIndexOutOfRangeException);
    static ExceptionDelegate invalidCastDelegate = new ExceptionDelegate(SetPendingInvalidCastException);
    static ExceptionDelegate invalidOperationDelegate = new ExceptionDelegate(SetPendingInvalidOperationException);
    static ExceptionDelegate ioDelegate = new ExceptionDelegate(SetPendingIOException);
    static ExceptionDelegate nullReferenceDelegate = new ExceptionDelegate(SetPendingNullReferenceException);
    static ExceptionDelegate outOfMemoryDelegate = new ExceptionDelegate(SetPendingOutOfMemoryException);
    static ExceptionDelegate overflowDelegate = new ExceptionDelegate(SetPendingOverflowException);
    static ExceptionDelegate systemDelegate = new ExceptionDelegate(SetPendingSystemException);

    static ExceptionArgumentDelegate argumentDelegate = new ExceptionArgumentDelegate(SetPendingArgumentException);
    static ExceptionArgumentDelegate argumentNullDelegate = new ExceptionArgumentDelegate(SetPendingArgumentNullException);
    static ExceptionArgumentDelegate argumentOutOfRangeDelegate = new ExceptionArgumentDelegate(SetPendingArgumentOutOfRangeException);

    [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="SWIGRegisterExceptionCallbacks_libmpt_library")]
    public static extern void SWIGRegisterExceptionCallbacks_libmpt_library(
                                ExceptionDelegate applicationDelegate,
                                ExceptionDelegate arithmeticDelegate,
                                ExceptionDelegate divideByZeroDelegate, 
                                ExceptionDelegate indexOutOfRangeDelegate, 
                                ExceptionDelegate invalidCastDelegate,
                                ExceptionDelegate invalidOperationDelegate,
                                ExceptionDelegate ioDelegate,
                                ExceptionDelegate nullReferenceDelegate,
                                ExceptionDelegate outOfMemoryDelegate, 
                                ExceptionDelegate overflowDelegate, 
                                ExceptionDelegate systemExceptionDelegate);

    [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="SWIGRegisterExceptionArgumentCallbacks_libmpt_library")]
    public static extern void SWIGRegisterExceptionCallbacksArgument_libmpt_library(
                                ExceptionArgumentDelegate argumentDelegate,
                                ExceptionArgumentDelegate argumentNullDelegate,
                                ExceptionArgumentDelegate argumentOutOfRangeDelegate);

    static void SetPendingApplicationException(string message) {
      SWIGPendingException.Set(new global::System.ApplicationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArithmeticException(string message) {
      SWIGPendingException.Set(new global::System.ArithmeticException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingDivideByZeroException(string message) {
      SWIGPendingException.Set(new global::System.DivideByZeroException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIndexOutOfRangeException(string message) {
      SWIGPendingException.Set(new global::System.IndexOutOfRangeException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidCastException(string message) {
      SWIGPendingException.Set(new global::System.InvalidCastException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidOperationException(string message) {
      SWIGPendingException.Set(new global::System.InvalidOperationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIOException(string message) {
      SWIGPendingException.Set(new global::System.IO.IOException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingNullReferenceException(string message) {
      SWIGPendingException.Set(new global::System.NullReferenceException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOutOfMemoryException(string message) {
      SWIGPendingException.Set(new global::System.OutOfMemoryException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOverflowException(string message) {
      SWIGPendingException.Set(new global::System.OverflowException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingSystemException(string message) {
      SWIGPendingException.Set(new global::System.SystemException(message, SWIGPendingException.Retrieve()));
    }

    static void SetPendingArgumentException(string message, string paramName) {
      SWIGPendingException.Set(new global::System.ArgumentException(message, paramName, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArgumentNullException(string message, string paramName) {
      global::System.Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new global::System.ArgumentNullException(paramName, message));
    }
    static void SetPendingArgumentOutOfRangeException(string message, string paramName) {
      global::System.Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new global::System.ArgumentOutOfRangeException(paramName, message));
    }

    static SWIGExceptionHelper() {
      SWIGRegisterExceptionCallbacks_libmpt_library(
                                applicationDelegate,
                                arithmeticDelegate,
                                divideByZeroDelegate,
                                indexOutOfRangeDelegate,
                                invalidCastDelegate,
                                invalidOperationDelegate,
                                ioDelegate,
                                nullReferenceDelegate,
                                outOfMemoryDelegate,
                                overflowDelegate,
                                systemDelegate);

      SWIGRegisterExceptionCallbacksArgument_libmpt_library(
                                argumentDelegate,
                                argumentNullDelegate,
                                argumentOutOfRangeDelegate);
    }
  }

  protected static SWIGExceptionHelper swigExceptionHelper = new SWIGExceptionHelper();

  public class SWIGPendingException {
    [global::System.ThreadStatic]
    private static global::System.Exception pendingException = null;
    private static int numExceptionsPending = 0;
    private static global::System.Object exceptionsLock = null;

    public static bool Pending {
      get {
        bool pending = false;
        if (numExceptionsPending > 0)
          if (pendingException != null)
            pending = true;
        return pending;
      } 
    }

    public static void Set(global::System.Exception e) {
      if (pendingException != null)
        throw new global::System.ApplicationException("FATAL: An earlier pending exception from unmanaged code was missed and thus not thrown (" + pendingException.ToString() + ")", e);
      pendingException = e;
      lock(exceptionsLock) {
        numExceptionsPending++;
      }
    }

    public static global::System.Exception Retrieve() {
      global::System.Exception e = null;
      if (numExceptionsPending > 0) {
        if (pendingException != null) {
          e = pendingException;
          pendingException = null;
          lock(exceptionsLock) {
            numExceptionsPending--;
          }
        }
      }
      return e;
    }

    static SWIGPendingException() {
      exceptionsLock = new global::System.Object();
    }
  }


  protected class SWIGStringHelper {

    public delegate string SWIGStringDelegate(string message);
    static SWIGStringDelegate stringDelegate = new SWIGStringDelegate(CreateString);

    [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="SWIGRegisterStringCallback_libmpt_library")]
    public static extern void SWIGRegisterStringCallback_libmpt_library(SWIGStringDelegate stringDelegate);

    static string CreateString(string cString) {
      return cString;
    }

    static SWIGStringHelper() {
      SWIGRegisterStringCallback_libmpt_library(stringDelegate);
    }
  }

  static protected SWIGStringHelper swigStringHelper = new SWIGStringHelper();


  static libmpt_libraryPINVOKE() {
  }


  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Layers_Clear")]
  public static extern void Layers_Clear(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Layers_Add")]
  public static extern void Layers_Add(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Layers_size")]
  public static extern uint Layers_size(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Layers_capacity")]
  public static extern uint Layers_capacity(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Layers_reserve")]
  public static extern void Layers_reserve(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_new_Layers__SWIG_0")]
  public static extern global::System.IntPtr new_Layers__SWIG_0();

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_new_Layers__SWIG_1")]
  public static extern global::System.IntPtr new_Layers__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_new_Layers__SWIG_2")]
  public static extern global::System.IntPtr new_Layers__SWIG_2(int jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Layers_getitemcopy")]
  public static extern global::System.IntPtr Layers_getitemcopy(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Layers_getitem")]
  public static extern global::System.IntPtr Layers_getitem(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Layers_setitem")]
  public static extern void Layers_setitem(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Layers_AddRange")]
  public static extern void Layers_AddRange(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Layers_GetRange")]
  public static extern global::System.IntPtr Layers_GetRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Layers_Insert")]
  public static extern void Layers_Insert(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Layers_InsertRange")]
  public static extern void Layers_InsertRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Layers_RemoveAt")]
  public static extern void Layers_RemoveAt(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Layers_RemoveRange")]
  public static extern void Layers_RemoveRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Layers_Repeat")]
  public static extern global::System.IntPtr Layers_Repeat(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Layers_Reverse__SWIG_0")]
  public static extern void Layers_Reverse__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Layers_Reverse__SWIG_1")]
  public static extern void Layers_Reverse__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Layers_SetRange")]
  public static extern void Layers_SetRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_delete_Layers")]
  public static extern void delete_Layers(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Buffer_Clear")]
  public static extern void Buffer_Clear(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Buffer_Add")]
  public static extern void Buffer_Add(global::System.Runtime.InteropServices.HandleRef jarg1, char jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Buffer_size")]
  public static extern uint Buffer_size(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Buffer_capacity")]
  public static extern uint Buffer_capacity(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Buffer_reserve")]
  public static extern void Buffer_reserve(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_new_Buffer__SWIG_0")]
  public static extern global::System.IntPtr new_Buffer__SWIG_0();

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_new_Buffer__SWIG_1")]
  public static extern global::System.IntPtr new_Buffer__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_new_Buffer__SWIG_2")]
  public static extern global::System.IntPtr new_Buffer__SWIG_2(int jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Buffer_getitemcopy")]
  public static extern char Buffer_getitemcopy(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Buffer_getitem")]
  public static extern char Buffer_getitem(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Buffer_setitem")]
  public static extern void Buffer_setitem(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, char jarg3);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Buffer_AddRange")]
  public static extern void Buffer_AddRange(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Buffer_GetRange")]
  public static extern global::System.IntPtr Buffer_GetRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Buffer_Insert")]
  public static extern void Buffer_Insert(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, char jarg3);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Buffer_InsertRange")]
  public static extern void Buffer_InsertRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Buffer_RemoveAt")]
  public static extern void Buffer_RemoveAt(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Buffer_RemoveRange")]
  public static extern void Buffer_RemoveRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Buffer_Repeat")]
  public static extern global::System.IntPtr Buffer_Repeat(char jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Buffer_Reverse__SWIG_0")]
  public static extern void Buffer_Reverse__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Buffer_Reverse__SWIG_1")]
  public static extern void Buffer_Reverse__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Buffer_SetRange")]
  public static extern void Buffer_SetRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Buffer_Contains")]
  public static extern bool Buffer_Contains(global::System.Runtime.InteropServices.HandleRef jarg1, char jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Buffer_IndexOf")]
  public static extern int Buffer_IndexOf(global::System.Runtime.InteropServices.HandleRef jarg1, char jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Buffer_LastIndexOf")]
  public static extern int Buffer_LastIndexOf(global::System.Runtime.InteropServices.HandleRef jarg1, char jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Buffer_Remove")]
  public static extern bool Buffer_Remove(global::System.Runtime.InteropServices.HandleRef jarg1, char jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_delete_Buffer")]
  public static extern void delete_Buffer(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_EmbeddingsOfTheTokens_Clear")]
  public static extern void EmbeddingsOfTheTokens_Clear(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_EmbeddingsOfTheTokens_Add")]
  public static extern void EmbeddingsOfTheTokens_Add(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_EmbeddingsOfTheTokens_size")]
  public static extern uint EmbeddingsOfTheTokens_size(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_EmbeddingsOfTheTokens_capacity")]
  public static extern uint EmbeddingsOfTheTokens_capacity(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_EmbeddingsOfTheTokens_reserve")]
  public static extern void EmbeddingsOfTheTokens_reserve(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_new_EmbeddingsOfTheTokens__SWIG_0")]
  public static extern global::System.IntPtr new_EmbeddingsOfTheTokens__SWIG_0();

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_new_EmbeddingsOfTheTokens__SWIG_1")]
  public static extern global::System.IntPtr new_EmbeddingsOfTheTokens__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_new_EmbeddingsOfTheTokens__SWIG_2")]
  public static extern global::System.IntPtr new_EmbeddingsOfTheTokens__SWIG_2(int jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_EmbeddingsOfTheTokens_getitemcopy")]
  public static extern global::System.IntPtr EmbeddingsOfTheTokens_getitemcopy(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_EmbeddingsOfTheTokens_getitem")]
  public static extern global::System.IntPtr EmbeddingsOfTheTokens_getitem(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_EmbeddingsOfTheTokens_setitem")]
  public static extern void EmbeddingsOfTheTokens_setitem(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_EmbeddingsOfTheTokens_AddRange")]
  public static extern void EmbeddingsOfTheTokens_AddRange(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_EmbeddingsOfTheTokens_GetRange")]
  public static extern global::System.IntPtr EmbeddingsOfTheTokens_GetRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_EmbeddingsOfTheTokens_Insert")]
  public static extern void EmbeddingsOfTheTokens_Insert(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_EmbeddingsOfTheTokens_InsertRange")]
  public static extern void EmbeddingsOfTheTokens_InsertRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_EmbeddingsOfTheTokens_RemoveAt")]
  public static extern void EmbeddingsOfTheTokens_RemoveAt(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_EmbeddingsOfTheTokens_RemoveRange")]
  public static extern void EmbeddingsOfTheTokens_RemoveRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_EmbeddingsOfTheTokens_Repeat")]
  public static extern global::System.IntPtr EmbeddingsOfTheTokens_Repeat(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_EmbeddingsOfTheTokens_Reverse__SWIG_0")]
  public static extern void EmbeddingsOfTheTokens_Reverse__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_EmbeddingsOfTheTokens_Reverse__SWIG_1")]
  public static extern void EmbeddingsOfTheTokens_Reverse__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_EmbeddingsOfTheTokens_SetRange")]
  public static extern void EmbeddingsOfTheTokens_SetRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_delete_EmbeddingsOfTheTokens")]
  public static extern void delete_EmbeddingsOfTheTokens(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Logits_Clear")]
  public static extern void Logits_Clear(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Logits_Add")]
  public static extern void Logits_Add(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Logits_size")]
  public static extern uint Logits_size(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Logits_capacity")]
  public static extern uint Logits_capacity(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Logits_reserve")]
  public static extern void Logits_reserve(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_new_Logits__SWIG_0")]
  public static extern global::System.IntPtr new_Logits__SWIG_0();

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_new_Logits__SWIG_1")]
  public static extern global::System.IntPtr new_Logits__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_new_Logits__SWIG_2")]
  public static extern global::System.IntPtr new_Logits__SWIG_2(int jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Logits_getitemcopy")]
  public static extern float Logits_getitemcopy(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Logits_getitem")]
  public static extern float Logits_getitem(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Logits_setitem")]
  public static extern void Logits_setitem(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, float jarg3);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Logits_AddRange")]
  public static extern void Logits_AddRange(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Logits_GetRange")]
  public static extern global::System.IntPtr Logits_GetRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Logits_Insert")]
  public static extern void Logits_Insert(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, float jarg3);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Logits_InsertRange")]
  public static extern void Logits_InsertRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Logits_RemoveAt")]
  public static extern void Logits_RemoveAt(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Logits_RemoveRange")]
  public static extern void Logits_RemoveRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Logits_Repeat")]
  public static extern global::System.IntPtr Logits_Repeat(float jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Logits_Reverse__SWIG_0")]
  public static extern void Logits_Reverse__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Logits_Reverse__SWIG_1")]
  public static extern void Logits_Reverse__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Logits_SetRange")]
  public static extern void Logits_SetRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Logits_Contains")]
  public static extern bool Logits_Contains(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Logits_IndexOf")]
  public static extern int Logits_IndexOf(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Logits_LastIndexOf")]
  public static extern int Logits_LastIndexOf(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Logits_Remove")]
  public static extern bool Logits_Remove(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_delete_Logits")]
  public static extern void delete_Logits(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Tokens_Clear")]
  public static extern void Tokens_Clear(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Tokens_Add")]
  public static extern void Tokens_Add(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Tokens_size")]
  public static extern uint Tokens_size(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Tokens_capacity")]
  public static extern uint Tokens_capacity(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Tokens_reserve")]
  public static extern void Tokens_reserve(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_new_Tokens__SWIG_0")]
  public static extern global::System.IntPtr new_Tokens__SWIG_0();

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_new_Tokens__SWIG_1")]
  public static extern global::System.IntPtr new_Tokens__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_new_Tokens__SWIG_2")]
  public static extern global::System.IntPtr new_Tokens__SWIG_2(int jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Tokens_getitemcopy")]
  public static extern int Tokens_getitemcopy(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Tokens_getitem")]
  public static extern int Tokens_getitem(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Tokens_setitem")]
  public static extern void Tokens_setitem(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Tokens_AddRange")]
  public static extern void Tokens_AddRange(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Tokens_GetRange")]
  public static extern global::System.IntPtr Tokens_GetRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Tokens_Insert")]
  public static extern void Tokens_Insert(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Tokens_InsertRange")]
  public static extern void Tokens_InsertRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Tokens_RemoveAt")]
  public static extern void Tokens_RemoveAt(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Tokens_RemoveRange")]
  public static extern void Tokens_RemoveRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Tokens_Repeat")]
  public static extern global::System.IntPtr Tokens_Repeat(int jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Tokens_Reverse__SWIG_0")]
  public static extern void Tokens_Reverse__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Tokens_Reverse__SWIG_1")]
  public static extern void Tokens_Reverse__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Tokens_SetRange")]
  public static extern void Tokens_SetRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Tokens_Contains")]
  public static extern bool Tokens_Contains(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Tokens_IndexOf")]
  public static extern int Tokens_IndexOf(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Tokens_LastIndexOf")]
  public static extern int Tokens_LastIndexOf(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Tokens_Remove")]
  public static extern bool Tokens_Remove(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_delete_Tokens")]
  public static extern void delete_Tokens(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_LastNTokens_Clear")]
  public static extern void LastNTokens_Clear(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_LastNTokens_Add")]
  public static extern void LastNTokens_Add(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_LastNTokens_size")]
  public static extern uint LastNTokens_size(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_LastNTokens_capacity")]
  public static extern uint LastNTokens_capacity(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_LastNTokens_reserve")]
  public static extern void LastNTokens_reserve(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_new_LastNTokens__SWIG_0")]
  public static extern global::System.IntPtr new_LastNTokens__SWIG_0();

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_new_LastNTokens__SWIG_1")]
  public static extern global::System.IntPtr new_LastNTokens__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_new_LastNTokens__SWIG_2")]
  public static extern global::System.IntPtr new_LastNTokens__SWIG_2(int jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_LastNTokens_getitemcopy")]
  public static extern global::System.IntPtr LastNTokens_getitemcopy(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_LastNTokens_getitem")]
  public static extern global::System.IntPtr LastNTokens_getitem(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_LastNTokens_setitem")]
  public static extern void LastNTokens_setitem(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_LastNTokens_AddRange")]
  public static extern void LastNTokens_AddRange(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_LastNTokens_GetRange")]
  public static extern global::System.IntPtr LastNTokens_GetRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_LastNTokens_Insert")]
  public static extern void LastNTokens_Insert(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_LastNTokens_InsertRange")]
  public static extern void LastNTokens_InsertRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_LastNTokens_RemoveAt")]
  public static extern void LastNTokens_RemoveAt(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_LastNTokens_RemoveRange")]
  public static extern void LastNTokens_RemoveRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_LastNTokens_Repeat")]
  public static extern global::System.IntPtr LastNTokens_Repeat(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_LastNTokens_Reverse__SWIG_0")]
  public static extern void LastNTokens_Reverse__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_LastNTokens_Reverse__SWIG_1")]
  public static extern void LastNTokens_Reverse__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_LastNTokens_SetRange")]
  public static extern void LastNTokens_SetRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_delete_LastNTokens")]
  public static extern void delete_LastNTokens(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_new_Tensors__SWIG_0")]
  public static extern global::System.IntPtr new_Tensors__SWIG_0();

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_new_Tensors__SWIG_1")]
  public static extern global::System.IntPtr new_Tensors__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Tensors_size")]
  public static extern uint Tensors_size(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Tensors_empty")]
  public static extern bool Tensors_empty(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Tensors_Clear")]
  public static extern void Tensors_Clear(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Tensors_getitem")]
  public static extern global::System.IntPtr Tensors_getitem(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Tensors_setitem")]
  public static extern void Tensors_setitem(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Tensors_ContainsKey")]
  public static extern bool Tensors_ContainsKey(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Tensors_Add")]
  public static extern void Tensors_Add(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Tensors_Remove")]
  public static extern bool Tensors_Remove(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Tensors_create_iterator_begin")]
  public static extern global::System.IntPtr Tensors_create_iterator_begin(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Tensors_get_next_key")]
  public static extern string Tensors_get_next_key(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Tensors_destroy_iterator")]
  public static extern void Tensors_destroy_iterator(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_delete_Tensors")]
  public static extern void delete_Tensors(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_hparams_d_model_set")]
  public static extern void mpt_hparams_d_model_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_hparams_d_model_get")]
  public static extern int mpt_hparams_d_model_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_hparams_max_seq_len_set")]
  public static extern void mpt_hparams_max_seq_len_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_hparams_max_seq_len_get")]
  public static extern int mpt_hparams_max_seq_len_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_hparams_n_heads_set")]
  public static extern void mpt_hparams_n_heads_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_hparams_n_heads_get")]
  public static extern int mpt_hparams_n_heads_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_hparams_n_layers_set")]
  public static extern void mpt_hparams_n_layers_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_hparams_n_layers_get")]
  public static extern int mpt_hparams_n_layers_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_hparams_n_vocab_set")]
  public static extern void mpt_hparams_n_vocab_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_hparams_n_vocab_get")]
  public static extern int mpt_hparams_n_vocab_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_hparams_alibi_bias_max_set")]
  public static extern void mpt_hparams_alibi_bias_max_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_hparams_alibi_bias_max_get")]
  public static extern float mpt_hparams_alibi_bias_max_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_hparams_clip_qkv_set")]
  public static extern void mpt_hparams_clip_qkv_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_hparams_clip_qkv_get")]
  public static extern float mpt_hparams_clip_qkv_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_hparams_ftype_set")]
  public static extern void mpt_hparams_ftype_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_hparams_ftype_get")]
  public static extern int mpt_hparams_ftype_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_hparams_n_ctx_set")]
  public static extern void mpt_hparams_n_ctx_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_hparams_n_ctx_get")]
  public static extern int mpt_hparams_n_ctx_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_new_mpt_hparams")]
  public static extern global::System.IntPtr new_mpt_hparams();

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_delete_mpt_hparams")]
  public static extern void delete_mpt_hparams(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_layer_norm_1_weight_set")]
  public static extern void mpt_layer_norm_1_weight_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_layer_norm_1_weight_get")]
  public static extern global::System.IntPtr mpt_layer_norm_1_weight_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_layer_c_attn_wqkv_weight_set")]
  public static extern void mpt_layer_c_attn_wqkv_weight_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_layer_c_attn_wqkv_weight_get")]
  public static extern global::System.IntPtr mpt_layer_c_attn_wqkv_weight_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_layer_c_attn_out_proj_weight_set")]
  public static extern void mpt_layer_c_attn_out_proj_weight_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_layer_c_attn_out_proj_weight_get")]
  public static extern global::System.IntPtr mpt_layer_c_attn_out_proj_weight_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_layer_norm_2_weight_set")]
  public static extern void mpt_layer_norm_2_weight_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_layer_norm_2_weight_get")]
  public static extern global::System.IntPtr mpt_layer_norm_2_weight_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_layer_ffn_up_proj_set")]
  public static extern void mpt_layer_ffn_up_proj_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_layer_ffn_up_proj_get")]
  public static extern global::System.IntPtr mpt_layer_ffn_up_proj_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_layer_ffn_down_proj_set")]
  public static extern void mpt_layer_ffn_down_proj_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_layer_ffn_down_proj_get")]
  public static extern global::System.IntPtr mpt_layer_ffn_down_proj_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_new_mpt_layer")]
  public static extern global::System.IntPtr new_mpt_layer();

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_delete_mpt_layer")]
  public static extern void delete_mpt_layer(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_model_hparams_set")]
  public static extern void mpt_model_hparams_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_model_hparams_get")]
  public static extern global::System.IntPtr mpt_model_hparams_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_model_wte_weight_set")]
  public static extern void mpt_model_wte_weight_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_model_wte_weight_get")]
  public static extern global::System.IntPtr mpt_model_wte_weight_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_model_norm_f_weight_set")]
  public static extern void mpt_model_norm_f_weight_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_model_norm_f_weight_get")]
  public static extern global::System.IntPtr mpt_model_norm_f_weight_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_model_layers_set")]
  public static extern void mpt_model_layers_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_model_layers_get")]
  public static extern global::System.IntPtr mpt_model_layers_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_model_memory_k_set")]
  public static extern void mpt_model_memory_k_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_model_memory_k_get")]
  public static extern global::System.IntPtr mpt_model_memory_k_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_model_memory_v_set")]
  public static extern void mpt_model_memory_v_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_model_memory_v_get")]
  public static extern global::System.IntPtr mpt_model_memory_v_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_model_ctx_set")]
  public static extern void mpt_model_ctx_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_model_ctx_get")]
  public static extern global::System.IntPtr mpt_model_ctx_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_model_tensors_set")]
  public static extern void mpt_model_tensors_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_model_tensors_get")]
  public static extern global::System.IntPtr mpt_model_tensors_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_new_mpt_model")]
  public static extern global::System.IntPtr new_mpt_model();

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_delete_mpt_model")]
  public static extern void delete_mpt_model(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_params_n_threads_set")]
  public static extern void mpt_params_n_threads_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_params_n_threads_get")]
  public static extern int mpt_params_n_threads_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_params_seed_set")]
  public static extern void mpt_params_seed_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_params_seed_get")]
  public static extern int mpt_params_seed_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_params_n_predict_set")]
  public static extern void mpt_params_n_predict_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_params_n_predict_get")]
  public static extern int mpt_params_n_predict_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_params_n_batch_set")]
  public static extern void mpt_params_n_batch_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_params_n_batch_get")]
  public static extern int mpt_params_n_batch_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_params_n_ctx_set")]
  public static extern void mpt_params_n_ctx_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_params_n_ctx_get")]
  public static extern int mpt_params_n_ctx_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_params_model_set")]
  public static extern void mpt_params_model_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_params_model_get")]
  public static extern string mpt_params_model_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_params_top_k_set")]
  public static extern void mpt_params_top_k_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_params_top_k_get")]
  public static extern int mpt_params_top_k_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_params_top_p_set")]
  public static extern void mpt_params_top_p_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_params_top_p_get")]
  public static extern float mpt_params_top_p_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_params_temp_set")]
  public static extern void mpt_params_temp_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_params_temp_get")]
  public static extern float mpt_params_temp_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_params_repeat_last_n_set")]
  public static extern void mpt_params_repeat_last_n_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_params_repeat_last_n_get")]
  public static extern int mpt_params_repeat_last_n_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_params_repeat_penalty_set")]
  public static extern void mpt_params_repeat_penalty_set(global::System.Runtime.InteropServices.HandleRef jarg1, float jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_mpt_params_repeat_penalty_get")]
  public static extern float mpt_params_repeat_penalty_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_new_mpt_params")]
  public static extern global::System.IntPtr new_mpt_params();

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_delete_mpt_params")]
  public static extern void delete_mpt_params(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_new_Mpt")]
  public static extern global::System.IntPtr new_Mpt(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Mpt_OnNewTokenProcessed")]
  public static extern void Mpt_OnNewTokenProcessed(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Mpt_OnNewTokenProcessedSwigExplicitMpt")]
  public static extern void Mpt_OnNewTokenProcessedSwigExplicitMpt(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Mpt_OnLogMessage")]
  public static extern void Mpt_OnLogMessage(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Mpt_OnLogMessageSwigExplicitMpt")]
  public static extern void Mpt_OnLogMessageSwigExplicitMpt(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Mpt_Process")]
  public static extern string Mpt_Process(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Mpt_TokenizeMessage")]
  public static extern global::System.IntPtr Mpt_TokenizeMessage(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Mpt_ProcessTokenizedMessage")]
  public static extern string Mpt_ProcessTokenizedMessage(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Mpt_LogPerplexity")]
  public static extern void Mpt_LogPerplexity(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Mpt_GetRandomMessage")]
  public static extern string Mpt_GetRandomMessage(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_delete_Mpt")]
  public static extern void delete_Mpt(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("libs/libmpt-library", EntryPoint="CSharp_MptLibrary_Mpt_director_connect")]
  public static extern void Mpt_director_connect(global::System.Runtime.InteropServices.HandleRef jarg1, Mpt.SwigDelegateMpt_0 delegate0, Mpt.SwigDelegateMpt_1 delegate1);
}

}
